<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <service id="vs_thruway.thruway.loop" class="React\EventLoop\LoopInterface" public="true">
            <factory class="React\EventLoop\Factory" method="create" />
        </service>

        <service id="vs_thruway.thruway.ratchet.transport" class="Thruway\Transport\RatchetTransportProvider" public="false">
            <argument type="expression">parameter( 'vs_thruway' )['router']['ip']</argument>
            <argument type="expression">parameter( 'vs_thruway' )['router']['port']</argument>
        </service>

        <service id="vs_thruway.thruway.client" class="Thruway\Peer\Client">
            <argument type="expression">parameter('vs_thruway')['realm']</argument>
        </service>

        <service id="vs_thruway.thruway.web.push.client" class="Vankosoft\ThruwayBundle\Client\WebPushClient" public="false">
            <argument type="expression">parameter('vs_thruway')['realm']</argument>
        </service>

        <service id="vs_thruway.thruway.internal.transport"
                 class="Thruway\Transport\InternalClientTransportProvider"
                 public="false">
            <argument type="service" id="vs_thruway.thruway.client"/>
        </service>

        <service id="vs_thruway.thruway.internal.manager"
                 class="Thruway\Transport\InternalClientTransportProvider"
                 public="false">
        </service>

        <service id="vs_thruway.thruway.internal.web.push"
                 class="Thruway\Transport\InternalClientTransportProvider"
                 public="false">
            <argument type="service" id="vs_thruway.thruway.web.push.client"/>
        </service>

        <service id="vs_thruway.thruway.server" class="Thruway\Peer\Router" public="true">
            <argument type="service" id="vs_thruway.thruway.loop"/>
            <call method="addTransportProvider">
                <argument type="service" id="vs_thruway.thruway.ratchet.transport"/>
            </call>
            <!--<call method="addTransportProvider">-->
            <!--<argument type="service" id="vs_thruway.thruway.internal.transport"/>-->
            <!--</call>-->
        </service>

        <service id="vs_thruway.thruway.resource.mapper"
                 class="Vankosoft\ThruwayBundle\ResourceMapper" public="true">
            <argument type="service" id="annotation_reader"/>
        </service>

        <service id="get_set_stdClass_normalizer" class="Vankosoft\ThruwayBundle\Serialization\StdClassNormalizer" public="false">
            <tag name="serializer.normalizer" />
        </service>

        <service id="wamp_kernel" class="Vankosoft\ThruwayBundle\WampKernel" public="true">
            <argument type="service" id="service_container"/>
            <argument type="service" id="serializer"/>
            <argument type="service" id="vs_thruway.thruway.resource.mapper"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="logger"/>
        </service>

        <service id="thruway_container" class="Symfony\Component\DependencyInjection\Container">
            <factory class="Vankosoft\ThruwayBundle\ContainerFactory" method="createContainer"/>
            <argument type="expression">parameter('kernel.container_class')</argument>
            <argument type="service" id="thruway.client"/>
            <argument type="service" id="vs_thruway.thruway.loop"/>
            <argument type="service" id="service_container"/>
        </service>

        <service id="thruway.details" class="Vankosoft\ThruwayBundle\Details"/>

        <!--Authentication-->
        <service id="vs_thruway.thruway.authentication.manager"
                 class="Thruway\Authentication\AuthenticationManager"
                 public="false">
            <argument type="service" id="vs_thruway.thruway.client"/>
        </service>

        <service id="vs_thruway.thruway.auth.manager.transport.provider"
                 class="Thruway\Transport\InternalClientTransportProvider"
                 public="false">
            <argument type="service" id="vs_thruway.thruway.authentication.manager"/>
        </service>

        <service id="vs_thruway.thruway.user.db"
                 class="Vankosoft\ThruwayBundle\Authentication\UserDB"
                 public="false">
            <argument type="service" id="service_container"/>
        </service>

        <service id="vs_thruway.thruway.wamp.cra.auth.client"
                 class="Thruway\Authentication\WampCraAuthProvider">
            <argument type="expression">[parameter( 'vs_thruway' )['realm']]</argument>
            <call method="setUserDb">
                <argument type="service" id="vs_thruway.thruway.user.db"/>
            </call>
        </service>

        <service id="vs_thruway.thruway.wamp.cra.auth.transport.provider"
                 class="Thruway\Transport\InternalClientTransportProvider">
            <argument type="service" id="vs_thruway.thruway.wamp.cra.auth.client"/>
        </service>

        <!--Main Thruway Client-->
        <service id="thruway.client"
                 class="Vankosoft\ThruwayBundle\Client\ClientManager" public="true">
            <argument type="service" id="service_container"/>
            <argument>%vs_thruway%</argument>
            <argument type="service" id="serializer"/>
            <argument type="service" id="vs_thruway.thruway.client.react_connector"/>
        </service>

        <service id="vs_thruway.thruway.topic_state_handler" class="Vankosoft\ThruwayBundle\TopicStateHandler">
            <tag name="kernel.event_listener" event="wamp.open" method="onOpen"/>
        </service>

        <!-- Topic State Handler -->
        <service id="vs_thruway.thruway.topic.state.handler"
                 class="Thruway\Subscription\StateHandlerRegistry"
                 public="false">
            <argument type="expression">parameter( 'vs_thruway' )['realm']</argument>
            <argument type="service" id="vs_thruway.thruway.loop"/>
        </service>

        <!-- Register command as public services -->
        <service id="thruway.command.debug" class="Vankosoft\ThruwayBundle\Command\ThruwayDebugCommand" public="true">
            <argument type="service" id="service_container"/>
            <argument type="service" id="doctrine"/>
            <argument type="service" id="validator"/>
            <tag name="console.command" command="thruway:debug" />
        </service>

        <service id="thruway.command.process" class="Vankosoft\ThruwayBundle\Command\ThruwayProcessCommand" public="true">
            <argument type="service" id="service_container"/>
            <argument type="service" id="doctrine"/>
            <argument type="service" id="validator"/>
            <call method="setLogger">
                <argument type="service" id="logger" />
            </call>
            <tag name="console.command" command="thruway:process" />
        </service>

        <service id="thruway.command.router" class="Vankosoft\ThruwayBundle\Command\ThruwayRouterCommand" public="true">
            <argument type="service" id="service_container"/>
            <argument type="service" id="doctrine"/>
            <argument type="service" id="validator"/>
            <call method="setLogger">
                <argument type="service" id="logger" />
            </call>
            <tag name="console.command" command="thruway:router:start" />
        </service>

        <service id="thruway.command.worker" class="Vankosoft\ThruwayBundle\Command\ThruwayWorkerCommand" public="true">
            <argument type="service" id="service_container" />
            <argument type="service" id="doctrine" />
            <argument type="service" id="validator" />
            <argument type="service" id="wamp_kernel" />
            <argument type="service" id="vs_thruway.thruway.client.react_connector" />
            <call method="setLogger">
                <argument type="service" id="logger" />
            </call>
            <tag name="console.command" command="thruway:worker:start" />
        </service>

        <service id="vs_thruway.thruway.client.react_connector" class="React\Socket\Connector">
            <argument type="service" id="vs_thruway.thruway.loop"/>
        </service>
    </services>
</container>